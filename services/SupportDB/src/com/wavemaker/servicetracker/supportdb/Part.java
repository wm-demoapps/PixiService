/*Copyright (c) 2022-2023 wavemaker.com All Rights Reserved.This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wavemaker.servicetracker.supportdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Part generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`part`")
public class Part implements Serializable {

    private Integer id;
    private Integer partMaterialId;
    private Integer partStockTypeId;
    private Integer price;
    private String name;
    private PartMaterial partMaterial;
    private PartStockType partStockType;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`part_material_id`", nullable = true, scale = 0, precision = 10)
    public Integer getPartMaterialId() {
        return this.partMaterialId;
    }

    public void setPartMaterialId(Integer partMaterialId) {
        this.partMaterialId = partMaterialId;
    }

    @Column(name = "`part_stock_type_id`", nullable = true, scale = 0, precision = 10)
    public Integer getPartStockTypeId() {
        return this.partStockTypeId;
    }

    public void setPartStockTypeId(Integer partStockTypeId) {
        this.partStockTypeId = partStockTypeId;
    }

    @Column(name = "`price`", nullable = true, scale = 0, precision = 10)
    public Integer getPrice() {
        return this.price;
    }

    public void setPrice(Integer price) {
        this.price = price;
    }

    @Column(name = "`name`", nullable = true, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`part_material_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_part_TO_part_material8X5sg`"))
    @Fetch(FetchMode.JOIN)
    public PartMaterial getPartMaterial() {
        return this.partMaterial;
    }

    public void setPartMaterial(PartMaterial partMaterial) {
        if(partMaterial != null) {
            this.partMaterialId = partMaterial.getId();
        }

        this.partMaterial = partMaterial;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`part_stock_type_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_part_TO_part_stock_tye67ff`"))
    @Fetch(FetchMode.JOIN)
    public PartStockType getPartStockType() {
        return this.partStockType;
    }

    public void setPartStockType(PartStockType partStockType) {
        if(partStockType != null) {
            this.partStockTypeId = partStockType.getId();
        }

        this.partStockType = partStockType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Part)) return false;
        final Part part = (Part) o;
        return Objects.equals(getId(), part.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
