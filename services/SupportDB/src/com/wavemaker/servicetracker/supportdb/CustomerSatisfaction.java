/*Copyright (c) 2022-2023 wavemaker.com All Rights Reserved.This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wavemaker.servicetracker.supportdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * CustomerSatisfaction generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`customer_satisfaction`")
public class CustomerSatisfaction implements Serializable {

    private Integer id;
    private Integer rmaId;
    private Integer ratingId;
    private Rating rating;
    private Rma rma;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`rma_id`", nullable = true, scale = 0, precision = 10)
    public Integer getRmaId() {
        return this.rmaId;
    }

    public void setRmaId(Integer rmaId) {
        this.rmaId = rmaId;
    }

    @Column(name = "`rating_id`", nullable = true, scale = 0, precision = 10)
    public Integer getRatingId() {
        return this.ratingId;
    }

    public void setRatingId(Integer ratingId) {
        this.ratingId = ratingId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`rating_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_customer_satisfactionb0PzP`"))
    @Fetch(FetchMode.JOIN)
    public Rating getRating() {
        return this.rating;
    }

    public void setRating(Rating rating) {
        if(rating != null) {
            this.ratingId = rating.getId();
        }

        this.rating = rating;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`rma_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_customer_satisfactiong0yER`"))
    @Fetch(FetchMode.JOIN)
    public Rma getRma() {
        return this.rma;
    }

    public void setRma(Rma rma) {
        if(rma != null) {
            this.rmaId = rma.getId();
        }

        this.rma = rma;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof CustomerSatisfaction)) return false;
        final CustomerSatisfaction customerSatisfaction = (CustomerSatisfaction) o;
        return Objects.equals(getId(), customerSatisfaction.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
